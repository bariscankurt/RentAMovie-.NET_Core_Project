@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<meta charset="utf-8" />

@if (SignInManager.IsSignedIn(User))
{
   
    <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">

            @if (User.IsInRole("Admin"))
            {
            <li><a asp-action="Index" class="nav navbar-nav navbar-right" asp-controller="Home">Yönetici</a></li>
            <li><a asp-action="Index" class="nav navbar-nav navbar-right" asp-controller="Yetkiler">Yetkiler</a></li>
            <li><a asp-action="Index" class="nav navbar-nav navbar-right" asp-controller="Kirala">Kiralamalar</a></li>
            }

            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Çıkış Yap</button>
            </li>
        </ul>
    </form>
    <ul class="nav navbar-nav navbar-right">
        <li>
            <a  asp-controller="Account" asp-action="Details"  class="navbar-right"  title="Manage">

                @UserManager.GetUserName(User)

            </a>
        </li>
    </ul>

}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-controller="Account" asp-action="Login">Giriş Yap</a></li>

        <li> <a asp-controller="Account" asp-action="Register">Kayıt Ol</a> </li>
    </ul>
}

